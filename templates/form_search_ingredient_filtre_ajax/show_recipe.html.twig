{% extends "base.html.twig" %}

{% block body %}
{% include 'navigation.html.twig' %}
<style>
.blue-color {
    color:blue;
    display:inline-block;
    height:600px;
}

</style>

<h1> Title: {{recipe[0].titre}}</h1>


<span id="heart_like {{recipe[0].id}}" data-id={{recipe[0].id}} class="bi bi-heart-fill blue-color"></span>
{# agrandir la taille des emoticones #}
<span id="grocery_list {{recipe[0].id}}" data-id={{recipe[0].id}} class="bi bi-cart-plus-fill biggerSize grocery_list"></span>
{# <button class="grocery_list" type="button">Click Me!</button>  #}
<h3> Ingredients: </h3>
<ul>

    {% for ingRec in ingRecette %}
        <li> {{ingRec.nom}}: {{ingRec.quantityMeasure}}</li>
    {% endfor %}

</ul>

    
<h3> Instructions: </h3>
<p>{{recipe[0].instruction}}</p>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.1/axios.min.js" integrity="sha512-emSwuKiMyYedRwflbZB2ghzX8Cw8fmNVgZ6yQNNXXagFzFOaQmbvQ1vmDkddHjm5AITcBIZfC7k4ShQSjgPAmQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>

let likeButton = document.getElementById("heart_like {{recipe[0].id}}");

// Check if the color preference is already stored in localStorage
if (localStorage.getItem("buttonColor") === "red") {
  likeButton.style.color = "rgb(255, 0, 0)";
}

likeButton.addEventListener('click', function(event) {
  event.preventDefault();
  let styles = getComputedStyle(likeButton).color;
  let btnClique=event.target;
    let formLike= new FormData();
    formLike.append("id", btnClique.dataset.id);

  if (styles === "rgb(0, 0, 255)") {
    likeButton.style.color = "rgb(255, 0, 0)";
    localStorage.setItem("buttonColor", "red"); // Store the color preference in localStorage

    axios.post ("/recipe/like", formLike, { headers: {
        'Content-Type': 'multipart/form-data',  },
    })
    .then ((response)=>{
        //alert("hello du if");
    
    })
    .catch((error)=>{
        console.log("La reponse de la requete POst:", error);

    })
  } else {
    likeButton.style.color = "rgb(0, 0, 255)";
    localStorage.removeItem("buttonColor"); // Remove the color preference from localStorage

    axios.post ("/recipe/unlike", formLike, { headers: {
        'Content-Type': 'multipart/form-data',  },
    })
    .then ((response)=>{
        //alert("hello du else");
    })
    .catch((error)=>{
        console.log("La reponse de la requete POst:", error);

    })
  }
});

let boutonsClicles=[];

// Fonction appelée lorsqu'un bouton est cliqué
function boutonClique(id) {
  // Ajouter l'ID du bouton dans la table
    boutonsClicles.push(id);
}

// Fonction pour écouter les clics sur les boutons de la page web
function ecouterClics() {
    //let boutonGrocID=document.getElementById("grocery_list {{recipe[0].id}}")
    let boutons = document.getElementsByClassName("grocery_list");
    for (let i = 0; i < boutons.length; i++) {
    boutons[i].addEventListener("click", function(event) {
        let btnClique=event.target
        let id = btnClique.dataset.id;
        boutonClique(id);
    });
    }
}

// Appeler la fonction pour écouter les clics lorsque la page est chargée
window.addEventListener("load", ecouterClics);
console.log(boutonsClicles);
</script>



{% endblock %}