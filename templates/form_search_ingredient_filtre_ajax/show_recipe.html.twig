{% extends "base.html.twig" %}

{% block body %}
{% include 'navigation.html.twig' %}
<style>
.blue-color {
    font-size: 2rem;
    color: blue;
}
.red-color {
    font-size: 2rem;
    color:red;
}

</style>

<h1> Title: {{recipe[0].titre}}</h1>

{% set class = 'bi bi-heart-fill blue-color' %}
{% if isfavorite %}
    {% set class = 'bi bi-heart-fill red-color' %}
{% else %}
    {% set class = 'bi bi-heart-fill blue-color' %}
{% endif %}
<span id="heart_like {{ recipe[0].id }}" data-id="{{ recipe[0].id }}" class="{{ class }}"></span> 

{# {% set recipeId = recipe[0].id %}
{% set userRecipes = app.user.recipes %}
{% set class = 'bi bi-heart-fill blue-color' %}


{% while  recipe in app.user.recipes %}

{% for recipe in app.user.recipes %}
<pre>
    {{ dump(recipe,recipe.id == recipeId,recipeId) }}
</pre>

    {% if recipe.id == recipeId %}

        {% set class = 'bi bi-heart-fill red-color' %}
    {% else %}
        {% set class = 'bi bi-heart-fill blue-color' %}
    {% endif %}
{% endfor %}

<span id="heart_like {{ recipeId }}" data-id="{{ recipeId }}" class="{{ class }}"></span> #}


{# {{ dump (app.user.recipes) }} #}
{# Remplacez 123 par l'ID de la recette que vous souhaitez vérifier #}
{# {{dump(app.user.recipes)}} #}

{# {% set recipeId = recipe[0].id %}  Remplacez 123 par l'ID de votre recette spécifique #}
{# 
{% for recipe in app.user.recipes %}
    {% if recipe.id == recipeId %} #}
        {# Faites quelque chose avec la recette spécifique
        {{ recipe.titre }}
        <span id="heart_like {{recipeId}}" data-id={{recipeId}} class="bi bi-heart-fill red-color"></span>
    
    {% else %}
        <p>ne fait rien</p>
        <span id="heart_like {{recipeId}}" data-id={{recipeId}} class="bi bi-heart-fill blue-color"></span> #}

    {# {% endif %}
{% endfor %} #}

{# {% set class = 'bi bi-heart-fill blue-color' %}
{% if recipe[0].id in app.user.recipes %}
    {% set class = class|replace({'blue-color': 'red-color'}) %}
{% endif %} #}

{# <span id="heart_like {{ recipe[0].id }}" data-id="{{ recipe[0].id }}" class="{{ class }}"></span> #}
{# {% for recipe in app.user.recipes %} 
    {% set recipeIdToCheck = recipe[0].id %} 
    {% set class = 'bi bi-heart-fill blue-color' %}
    <span id="heart_like {{recipe.id}}" data-id={{recipe.id}} class="{{ class }}"></span> #}
    {# {% if recipe.id == recipeIdToCheck %}
        {# La recette spécifique est trouvée dans les recettes de l'utilisateur #}
        {# <p>La recette est présente dans les recettes de l'utilisateur.</p>
        {% set class = class|replace({'blue-color': 'red-color'}) %} #} 
        {# <span id="heart_like {{recipe.id}}" data-id={{recipe.id}} class="{{ class }}"></span>
        <span id="heart_like {{recipe.id}}" data-id={{recipe.id}} class="bi bi-heart-fill red-color"></span> #}
        {# <span id="heart_like {{recipe[0].id}}" data-id={{recipe[0].id}} class="bi bi-heart-fill red-color"> #}
        {# Faites ici ce que vous souhaitez faire si la recette est trouvée #}
    {# {% else %}
        <span id="heart_like {{recipe.id}}" data-id={{recipe.id}} class="{{ class }}"></span> #}

    {# {% endif %} #}
{# {% endfor %}        #}


{# <span id="heart_like {{recipe[0].id}}" data-id={{recipe[0].id}} class="bi bi-heart-fill blue-color"></span>
    {% if app.user.recipes(recipe) %}
        <span id="heart_like {{recipe[0].id}}" data-id={{recipe[0].id}} class="bi bi-heart-fill blue-color">
    {% else %}
        <span id="heart_like {{recipe[0].id}}" data-id={{recipe[0].id}} class="bi bi-heart-fill blue-color">
    {% endif %} #}


{# agrandir la taille des emoticones #}
<span id={{recipe[0].id}} class="bi bi-cart-plus-fill" style="font-size: 2rem"></span>

<h3> Ingredients: </h3>
<ul>

    {% for ingRec in ingRecette %}
        <li> {{ingRec.nom}}: {{ingRec.quantity}}</li>
    {% endfor %}

</ul>

    
<h3> Instructions: </h3>
<p>{{recipe[0].instruction}}</p>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.1/axios.min.js" integrity="sha512-emSwuKiMyYedRwflbZB2ghzX8Cw8fmNVgZ6yQNNXXagFzFOaQmbvQ1vmDkddHjm5AITcBIZfC7k4ShQSjgPAmQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>

{# let likeButton = document.getElementById("heart_like {{recipe[0].id}}");

// Check if the color preference is already stored in localStorage
if (localStorage.getItem("buttonColor") === "red") {
    likeButton.style.color = "rgb(255, 0, 0)";
}

likeButton.addEventListener('click', function(event) {
    event.preventDefault();
    let styles = getComputedStyle(likeButton).color;
    let btnClique=event.target;
    let formLike= new FormData();
    formLike.append("id", btnClique.dataset.id);
    
    if (styles === "rgb(0, 0, 255)") {
        likeButton.style.color = "rgb(255, 0, 0)";
        localStorage.setItem("buttonColor", "red"); // Store the color preference in localStorage

    axios.post ("/recipe/like", formLike, { headers: {
        'Content-Type': 'multipart/form-data',  },
    })
    .then ((response)=>{
        alert("hello du if");
    
    })
    .catch((error)=>{
        console.log("La reponse de la requete POst:", error);

    })
    } 
    else {
        likeButton.style.color = "rgb(0, 0, 255)";
        localStorage.removeItem("buttonColor"); // Remove the color preference from localStorage

    axios.post ("/recipe/unlike", formLike, { headers: {
        'Content-Type': 'multipart/form-data',  },
    })
    .then ((response)=>{
        //alert("hello du else");
    })
    .catch((error)=>{
        console.log("La reponse de la requete POst:", error);

    })
    }
}); #}

let likeButton = document.getElementById("heart_like {{recipe[0].id}}");
likeButton.addEventListener('click', function(event) {
    event.preventDefault();
    let btnClique=event.target;
    let formLike= new FormData();
    formLike.append("id", btnClique.dataset.id);
    //axios.post ("/recipe/like", formLike, { headers: {
    axios.post ("{{path('recipe_like')}}", formLike, { headers: {
        'Content-Type': 'multipart/form-data',  },
    })
    .then ((response)=>{
        let colorHeart = response.data.heartColor;
        if (colorHeart=='bleu'){
            likeButton.style.color="blue";
        }else{
            likeButton.style.color="red";
        }


        //alert("je suis dans le then");
        //let myObj=JSON.Parse(arrayIn);
        console.log(colorHeart);
    
    })
    .catch((error)=>{
        console.log("La reponse de la requete POst:", error);

    })
        
});

let groceryButton = document.getElementById("{{recipe[0].id}}");
groceryButton.addEventListener('click', function(evenement) {
    evenement.preventDefault();

    let btnCliqueGrocery=evenement.target;
    let formLike= new FormData();
    formLike.append("id", btnCliqueGrocery.id);
    //const id=btnCliqueGrocery.id
    //axios.post (`/grocery/cart/add`, formLike, { headers: {
    axios.post ("{{path('app_grocery_cart_add')}}", formLike, { headers: {
        'Content-Type': 'multipart/form-data',  },
    })
    .then ((response)=>{
        //alert("hello du if");
        let arrayIn = response.data;

        //alert("je suis dans le then");
        //let myObj=JSON.Parse(arrayIn);
        console.log(arrayIn);
        
    
    })
    .catch((error)=>{
        console.log("La reponse de la requete POst:", error);

    });
})



</script>

{% endblock %}